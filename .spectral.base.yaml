extends: 
  - './.spectral.oas.yaml'
formats:
  - oas3
  - oas3.0
  - oas3.1
rules:
  info-matches-whispir:
    description: The title field must contain Whispir.
    severity: error
    given: $.info
    then:
      field: title
      function: pattern
      functionOptions:
        match: Whispir
  schema-examples:
    description: Schemas must have non-empty "x-examples" object.
    severity: error
    given: $.components.schemas[*]
    then:
      field: x-examples
      function: schema
      functionOptions:
        dialect: draft7
        schema:
          type: object
          minProperties: 1
  schema-descriptions:
    description: Schemas must have a "description".
    severity: error
    given:
      - $..schemas[*]
      - $..responses[*].content[*]..schema
      - $..requestBody.content[*]..schema
    then:
      field: description
      function: truthy
  schema-property-descriptions: # Note: this rule is not de-duplicated, and will show on parents $ref'ing children with issues until all child issues are resolved.
    description: Schema properties must have a "description".
    severity: error
    given:
      - $..schema[*]..properties[*]
      - $..responses[*].content[*]..schema..properties[*]
      - $..requestBody.content[*]..schema..properties[*]
      - $..headers[*]
    then:
      field: description
      function: truthy
  schema-property-examples: # Note: this rule is not de-duplicated, and will show on parents $ref'ing children with issues until all child issues are resolved.
    description: Schema properties must have an "example".
    severity: error
    given:
      - $..schema[*]..properties[?(@ && @.type && @.type !== "array" && @.type !== "object" && @.type !== "boolean" && !@.enum)]
      - $..responses[*].content[*]..schema..properties[?(@ && @.type && @.type !== "array" && @.type !== "object" && @.type !== "boolean" && !@.enum)]
      - $..requestBody.content[*]..schema..properties[?(@ && @.type && @.type !== "array" && @.type !== "object" && @.type !== "boolean" && !@.enum)]
      - $..headers[?(@ && @.type && @.type !== "array" && @.type !== "object" && @.type !== "boolean" && !@.enum)]
    then:
      field: example
      function: defined
  payload-examples:
    description: Request & response payload content must have non-empty "examples" object.
    severity: error
    given:
      - $..responses[*].content[*]
      - $..requestBody.content[*]
    then:
      field: examples
      function: schema
      functionOptions:
        dialect: draft7
        schema:
          type: object
          minProperties: 1
